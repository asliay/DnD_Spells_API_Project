  const [raceIndexes, setRaceIndexes] = useState([]);
  const [races, setRaces] = useState([]);

  const [classIndexes, setClassIndexes] = useState([]);
  const [classes, setClasses] = useState([]);

  
 
 const fetchRacesInfo = (indexes) => {
    let promises = indexes.map(index => fetch(`https://www.dnd5eapi.co/api/races/${index}`));

    Promise.all(promises)
      .then(responses => Promise.all(responses.map(r => r.json())))
      .then(races => setRaces(races))
  }

  useEffect(()=>{
    fetch(`https://www.dnd5eapi.co/api/races`)
    .then((res)=>res.json())
    .then((data)=>{
      let indexes = data.results.map(a => a.index);
      setRaceIndexes(indexes);
    })
    
  },[]);

  useEffect(()=>{ 
    fetchRacesInfo(raceIndexes);
  },[raceIndexes])

  const fetchClassesInfo = (indexes) => {
    let promises = indexes.map(index => fetch(`https://www.dnd5eapi.co/api/classes/${index}`));

    Promise.all(promises)
      .then(responses => Promise.all(responses.map(r => r.json())))
      .then(classes => setClasses(classes))
  }

  useEffect(()=>{
    fetch(`https://www.dnd5eapi.co/api/classes`)
    .then((res)=>res.json())
    .then((data)=>{
      let indexes = data.results.map(a => a.index);
      setClassIndexes(indexes);
    })
    
  },[]);

  useEffect(()=>{ 
    fetchClassesInfo(classIndexes);
  },[classIndexes])